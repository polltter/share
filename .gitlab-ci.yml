image: alpine:latest

stages:
    - build
    - deploy

variables:
    TERRAFORM_ROOT_FOLDER: 'terraform'

build:
    stage: build
    image: docker
    services:
        - docker:dind
    before_script:
        - BRANCH_NAME="${CI_COMMIT_BRANCH:-$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME}"
        - IMAGE_TAG="v$CI_COMMIT_SHA.$BRANCH_NAME.$(date +%Y-%m-%d)"
        - echo "IMAGE_TAG=$IMAGE_TAG" >> deploy.env
    script:
        - echo "$REPOSITORY_ACCESS_TOKEN" | docker login -u "$REPOSITORY_ACCESS_USERNAME" --password-stdin registry.gitlab.com
        - docker build --build-arg version=$CI_COMMIT_SHA -t $CI_REGISTRY_IMAGE:$IMAGE_TAG .
        - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG
        - docker tag $CI_REGISTRY_IMAGE:$IMAGE_TAG $CI_REGISTRY_IMAGE:$BRANCH_NAME-latest
        - docker push $CI_REGISTRY_IMAGE:$BRANCH_NAME-latest
    artifacts:
        reports:
            dotenv: deploy.env
    rules:
        - if: $CI_COMMIT_BRANCH == "container"
        - if: $CI_COMMIT_BRANCH == "integrate-deploy"

deploy:
    stage: deploy
    image:
        name: hashicorp/terraform:latest
        entrypoint: ['']
    rules:
        - if: $CI_COMMIT_BRANCH == "container"
    script:
        - cd $TERRAFORM_ROOT_FOLDER
        - terraform init -backend-config="username=${TF_USERNAME}" -backend-config="password=${TF_PASSWORD}"
        - terraform plan -out deploy.out -var "ibmcloud_api_key=$IBMCLOUD_API_KEY" -var "docker_image=$CI_REGISTRY_IMAGE:$IMAGE_TAG"
        - terraform apply -auto-approve deploy.out
    dependencies:
        - build
